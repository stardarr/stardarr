version: "3.8"

services:
  traefik:
    image: "traefik:v2.9"
    container_name: "traefik"
    restart: always
    dns:
      - 1.1.1.1
      - 1.0.0.1
    command:
      - "--accesslog=true"
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      # - "--providers.file.filename=/etc/traefik/dynamic.yml" # Required for external_hosts
      - "--providers.file.watch=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    env_file:
      - .env
    # extra_hosts:
    #   - "${EXTERNAL_DOMAIN}:${EXTERNAL_IP}" # optional
    #   - "whoami.${EXTERNAL_DOMAIN}:${EXTERNAL_IP}" # optional
    #   - "api.${EXTERNAL_DOMAIN}:${EXTERNAL_IP}" # optional
    volumes:
      - "./letsencrypt:/letsencrypt"
      # - "${APP_DIRECTORY}/Traefik/dynamic.yml:/etc/traefik/dynamic.yml" # Required for external_hosts
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  cloudflare-ddns:
    image: oznu/cloudflare-ddns:latest
    container_name: CFDDNS
    restart: always
    env_file:
      - .env.cloudflare

  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ${APP_DIRECTORY}/homarr/configs:/app/data/configs
      - ${APP_DIRECTORY}/homarr/data:/data
      - ${APP_DIRECTORY}/homarr/icons:/app/public/icons
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "7575:7575"

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    env_file:
      - .env
    volumes:
      - ${APP_DIRECTORY}/overseerr/config:/config
    ports:
      - 5055:5055
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr.rule=Host(`overseerr.${DOMAIN}`)"
      - "traefik.http.routers.overseerr.entrypoints=websecure"
      - "traefik.http.routers.overseerr.tls.certresolver=myresolver"
      - "traefik.http.services.overseerr.loadbalancer.server.port=5055"

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    env_file:
      - .env
    volumes:
      - ${APP_DIRECTORY}/sonarr/config:/config
      - ${TV_ROOT}:/tv
      # - ${HQTV_ROOT}:/HQTV # optional
      - ${DOWNLOAD_DIRECTORY}:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    env_file:
      - .env
    volumes:
      - ${APP_DIRECTORY}/radarr/config:/config
      - ${MOVIE_ROOT}:/movies
      - ${DOWNLOAD_DIRECTORY}:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    env_file:
      - .env
    volumes:
      - ${APP_DIRECTORY}/bazarr/config:/config
      - ${MOVIE_ROOT}:/movies
      - ${TV_ROOT}:/tv
    ports:
      - 6767:6767
    restart: unless-stopped

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    env_file:
      - .env
    volumes:
      - ${APP_DIRECTORY}/readarr/config:/config
      - ${BOOK_ROOT}:/books
      - ${DOWNLOAD_DIRECTORY}:/downloads
    ports:
      - 8787:8787
    restart: unless-stopped

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    dns:
      - 1.1.1.1
      - 1.0.0.1
    ports:
      - 32400:32400
    env_file:
      - .env
    volumes:
      - ${APP_DIRECTORY}/plex/config:/config
      - ${TV_ROOT}:/tv
      - ${HQTV_ROOT}:/HQTV
      - ${MOVIE_ROOT}:/movies
      - ${MUSIC_ROOT}:/music
    restart: unless-stopped
    devices:
      - /dev/dri:/dev/dri # GPU Support
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`plex.${DOMAIN}`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls.certresolver=myresolver"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"

  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    restart: unless-stopped
    container_name: nzbget
    env_file:
      - .env
    volumes:
      - ${APP_DIRECTORY}/nzbget/config:/config
      - ${DOWNLOAD_DIRECTORY}:/downloads
    ports:
      - 6789:6789

  unmanic:
    container_name: unmanic
    image: josh5/unmanic:latest
    restart: unless-stopped
    devices:
      - /dev/dri:/dev/dri # GPU Support
    ports:
      - 8888:8888
    env_file:
      - .env
    volumes:
      - ${APP_DIRECTORY}/unmanic/config:/config
      - ${TV_ROOT}:/library/tv
      - ${MOVIE_ROOT}:/library/movies
      - ${TEMP_DATA}:/tmp/unmanic

  nextcloud:
    image: nextcloud
    container_name: nextcloud
    restart: always
    links:
      - nextcloud-postgres
    depends_on:
      - "nextcloud-postgres"
    volumes:
      - ${NEXTCLOUD_STORAGE}:/var/www/html
    env_file:
      - .env.nextcloud
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`cloud.${DOMAIN}`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=myresolver"

  nextcloud-postgres:
    image: postgres:12
    container_name: "nextcloud-postgres"
    restart: always
    volumes:
      - ${APP_DIRECTORY}/nextcloud/db:/var/lib/postgresql/data
    env_file:
      - .env.nextcloud

  fireshare:
    container_name: fireshare
    image: shaneisrael/fireshare:latest
    volumes:
      - ${FIRESHARE_DATA}:/data
      - ${FIRESHARE_PROCESSED}:/processed
      - ${FIRESHARE_VIDEOS}:/videos
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fireshare.rule=Host(`videos.${DOMAIN}`)"
      - "traefik.http.routers.fireshare.entrypoints=websecure"
      - "traefik.http.routers.fireshare.tls.certresolver=myresolver"
